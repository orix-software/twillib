{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Twil lib documentation","text":""},{"location":"assembly/","title":"Assembly","text":""},{"location":"assembly/#assembly","title":"Assembly","text":"<p>const char str_slash[2] = \"/\"; const char rom_signature[18] = \"Empty ram v2024.2\";</p>"},{"location":"assembly/#twil_clear_rambank","title":"twil_clear_rambank","text":"<p>Description</p> <p>Clear bank for Orix bank pattern. Can work in ram bank or rom bank</p> <p>Input</p> <ul> <li>Accumulator : bank register to clear</li> <li>Y Register : banking register to clear</li> </ul> <p>Modify</p> <ul> <li>X Register </li> <li>Y Register </li> </ul> <p>Returns</p> <ul> <li> <p>Accumulator : TWILIGHTE_BANKING_REGISTER value</p> </li> <li> <p>X Register : TWILIGHTE_REGISTER value</p> </li> <li> <p>Y Register : current bank value</p> </li> </ul> <p>Example</p> <pre><code> jsr twil_save_registers\nrts\n</code></pre>"},{"location":"assembly/#twil_copy_buffer_to_ram_bank","title":"twil_copy_buffer_to_ram_bank","text":""},{"location":"assembly/#twil_restore_registers","title":"twil_restore_registers","text":""},{"location":"assembly/#twil_save_registers","title":"twil_save_registers","text":""},{"location":"assembly/#twil_get_bank_signature","title":"twil_get_bank_signature","text":""},{"location":"assembly/#twil_get_id_bank","title":"twil_get_id_bank","text":"<p>Description</p> <p>Convert set and bank to logical bank id</p> <p>Input</p> <ul> <li>Accumulator : Set </li> <li>Y Register : Bank </li> </ul> <p>Modify</p> <ul> <li>Accumulator </li> <li>X Register </li> <li>Y Register </li> </ul> <p>Returns</p> <ul> <li>Accumulator : The logical bank id</li> </ul> <p>Example</p> <pre><code> lda #$03 ; set 3\nldy #$03 ; bank3\njsr twil_get_id_bank\n; A contains the logical bank\nrts\n</code></pre>"},{"location":"assembly/#twil_get_registers_from_id_bank","title":"twil_get_registers_from_id_bank","text":"<p>Description</p> <p>Convert logical bank number into set and bank id</p> <p>Input</p> <ul> <li>Accumulator : Logical bank number to convert</li> <li>Y Register : Bank </li> </ul> <p>Modify</p> <ul> <li>Accumulator </li> <li>X Register </li> <li>Y Register </li> </ul> <p>Returns</p> <ul> <li> <p>Accumulator : Bank </p> </li> <li> <p>X Register : Set (banking register)</p> </li> </ul> <p>Example</p> <pre><code> lda #$03 ; set 3\nldy #$03 ; bank3\njsr twil_get_id_bank\n; A contains the logical bank\nrts\n</code></pre>"},{"location":"assembly/#twil_lib_version","title":"twil_lib_version","text":"<p>Description</p> <p>Return twil lib version</p> <p>Modify</p> <ul> <li>Accumulator </li> </ul> <p>Returns</p> <ul> <li>Accumulator : twillib version</li> </ul> <p>Example</p> <pre><code> jsr twil_lib_version\ncmp #TWIL_LIB_VERSION_2024_1\nbeq @is_twillib2024.1\nrts\n@is_twillib2024.1\n</code></pre>"},{"location":"assembly/#twil_load_into_ram_bank","title":"twil_load_into_ram_bank","text":""},{"location":"assembly/#twil_restore_registers_1","title":"twil_restore_registers","text":""},{"location":"assembly/#twil_save_registers_1","title":"twil_save_registers","text":""},{"location":"assembly/#twil_program_bank_code_inside_bank","title":"twil_program_bank_code_inside_bank","text":"<p>Description</p> <p>Program bank from a file. This routine can be used when the main program is inserted in a bank. This routine will copy a routine into main memory to copy the file</p> <p>Input</p> <ul> <li>Accumulator : Low ptr pathfilename</li> <li>X Register : High ptr pathfilename</li> <li>Y Register : Logical bank to program</li> </ul> <p>Example</p> <pre><code> lda #&lt;memcache_rom\nldx #&gt;memcache_rom\nldy #33\njsr twil_program_bank_code_inside_bank\nrts\n</code></pre>"},{"location":"assembly/#twil_restore_registers_2","title":"twil_restore_registers","text":"<p>Description</p> <p>Restore essentials Twilighte board register : Can be used in eeprom or EEPROM</p> <p>Input</p> <ul> <li>Accumulator : TWILIGHTE_BANKING_REGISTER backup</li> <li>X Register : TWILIGHTE_REGISTER backup</li> <li>Y Register : Bank backup</li> </ul> <p>Example</p> <pre><code> lda #$01 ; TWILIGHTE_BANKING_REGISTER\nldx #$01 ; TWILIGHTE_REGISTER\nldy #$01 ; bank\njsr twil_restore_registers\nrts\n</code></pre>"},{"location":"assembly/#twil_save_registers_2","title":"twil_save_registers","text":"<p>Description</p> <p>Save essentials Twilighte board register. Can be used in eeprom bank or ram bank</p> <p>Modify</p> <ul> <li>Accumulator </li> <li>X Register </li> <li>Y Register </li> </ul> <p>Returns</p> <ul> <li> <p>Accumulator : TWILIGHTE_BANKING_REGISTER value</p> </li> <li> <p>X Register : TWILIGHTE_REGISTER value</p> </li> <li> <p>Y Register : current bank value</p> </li> </ul> <p>Example</p> <pre><code> jsr twil_save_registers\nrts\n</code></pre>"},{"location":"assembly/#twil_set_bank_signature","title":"twil_set_bank_signature","text":"<p>Description</p> <p>Set bank signature</p> <p>Modify</p> <ul> <li>Accumulator </li> <li>Y Register </li> <li> <p>RESFor twil_set_bank_signature operation Input</p> </li> <li> <p>libzp : Bank backup</p> </li> </ul> <p>Example</p> <pre><code> jsr twil_set_bank_signature\nrts\n</code></pre>"},{"location":"c/","title":"C","text":""},{"location":"c/#c","title":"C","text":"<p>const char rom_signature[18] = \"Empty ram v2024.2\"; const char str_slash[2] = \"/\";</p>"},{"location":"2024.1/assembly/","title":"Assembly","text":""},{"location":"2024.1/assembly/#assembly","title":"Assembly","text":"<p>const char str_slash[2] = \"/\"; const char rom_signature[18] = \"Empty ram v2024.2\";</p>"},{"location":"2024.1/assembly/#twil_clear_rambank","title":"twil_clear_rambank","text":"<p>Description</p> <p>Clear bank for Orix bank pattern. Can work in ram bank or rom bank</p> <p>Input</p> <ul> <li>Accumulator : bank register to clear</li> <li>Y Register : banking register to clear</li> </ul> <p>Modify</p> <ul> <li>X Register </li> <li>Y Register </li> </ul> <p>Returns</p> <ul> <li> <p>Accumulator : TWILIGHTE_BANKING_REGISTER value</p> </li> <li> <p>X Register : TWILIGHTE_REGISTER value</p> </li> <li> <p>Y Register : current bank value</p> </li> </ul> <p>Example</p> <pre><code> jsr twil_save_registers\nrts\n</code></pre>"},{"location":"2024.1/assembly/#twil_copy_buffer_to_ram_bank","title":"twil_copy_buffer_to_ram_bank","text":""},{"location":"2024.1/assembly/#twil_restore_registers","title":"twil_restore_registers","text":""},{"location":"2024.1/assembly/#twil_save_registers","title":"twil_save_registers","text":""},{"location":"2024.1/assembly/#twil_get_bank_signature","title":"twil_get_bank_signature","text":""},{"location":"2024.1/assembly/#twil_get_id_bank","title":"twil_get_id_bank","text":"<p>Description</p> <p>Convert set and bank to logical bank id</p> <p>Input</p> <ul> <li>Accumulator : Set </li> <li>Y Register : Bank </li> </ul> <p>Modify</p> <ul> <li>Accumulator </li> <li>X Register </li> <li>Y Register </li> </ul> <p>Returns</p> <ul> <li>Accumulator : The logical bank id</li> </ul> <p>Example</p> <pre><code> lda #$03 ; set 3\nldy #$03 ; bank3\njsr twil_get_id_bank\n; A contains the logical bank\nrts\n</code></pre>"},{"location":"2024.1/assembly/#twil_get_registers_from_id_bank","title":"twil_get_registers_from_id_bank","text":"<p>Description</p> <p>Convert logical bank number into set and bank id</p> <p>Input</p> <ul> <li>Accumulator : Logical bank number to convert</li> <li>Y Register : Bank </li> </ul> <p>Modify</p> <ul> <li>Accumulator </li> <li>X Register </li> <li>Y Register </li> </ul> <p>Returns</p> <ul> <li> <p>Accumulator : Bank </p> </li> <li> <p>X Register : Set (banking register)</p> </li> </ul> <p>Example</p> <pre><code> lda #$03 ; set 3\nldy #$03 ; bank3\njsr twil_get_id_bank\n; A contains the logical bank\nrts\n</code></pre>"},{"location":"2024.1/assembly/#twil_lib_version","title":"twil_lib_version","text":"<p>Description</p> <p>Return twil lib version</p> <p>Modify</p> <ul> <li>Accumulator </li> </ul> <p>Returns</p> <ul> <li>Accumulator : twillib version</li> </ul> <p>Example</p> <pre><code> jsr twil_lib_version\ncmp #TWIL_LIB_VERSION_2024_1\nbeq @is_twillib2024.1\nrts\n@is_twillib2024.1\n</code></pre>"},{"location":"2024.1/assembly/#twil_load_into_ram_bank","title":"twil_load_into_ram_bank","text":""},{"location":"2024.1/assembly/#twil_restore_registers_1","title":"twil_restore_registers","text":""},{"location":"2024.1/assembly/#twil_save_registers_1","title":"twil_save_registers","text":""},{"location":"2024.1/assembly/#twil_program_bank_code_inside_bank","title":"twil_program_bank_code_inside_bank","text":"<p>Description</p> <p>Program bank from a file. This routine can be used when the main program is inserted in a bank. This routine will copy a routine into main memory to copy the file</p> <p>Input</p> <ul> <li>Accumulator : Low ptr pathfilename</li> <li>X Register : High ptr pathfilename</li> <li>Y Register : Logical bank to program</li> </ul> <p>Example</p> <pre><code> lda #&lt;memcache_rom\nldx #&gt;memcache_rom\nldy #33\njsr twil_program_bank_code_inside_bank\nrts\n</code></pre>"},{"location":"2024.1/assembly/#twil_restore_registers_2","title":"twil_restore_registers","text":"<p>Description</p> <p>Restore essentials Twilighte board register : Can be used in eeprom or EEPROM</p> <p>Input</p> <ul> <li>Accumulator : TWILIGHTE_BANKING_REGISTER backup</li> <li>X Register : TWILIGHTE_REGISTER backup</li> <li>Y Register : Bank backup</li> </ul> <p>Example</p> <pre><code> lda #$01 ; TWILIGHTE_BANKING_REGISTER\nldx #$01 ; TWILIGHTE_REGISTER\nldy #$01 ; bank\njsr twil_restore_registers\nrts\n</code></pre>"},{"location":"2024.1/assembly/#twil_save_registers_2","title":"twil_save_registers","text":"<p>Description</p> <p>Save essentials Twilighte board register. Can be used in eeprom bank or ram bank</p> <p>Modify</p> <ul> <li>Accumulator </li> <li>X Register </li> <li>Y Register </li> </ul> <p>Returns</p> <ul> <li> <p>Accumulator : TWILIGHTE_BANKING_REGISTER value</p> </li> <li> <p>X Register : TWILIGHTE_REGISTER value</p> </li> <li> <p>Y Register : current bank value</p> </li> </ul> <p>Example</p> <pre><code> jsr twil_save_registers\nrts\n</code></pre>"},{"location":"2024.1/assembly/#twil_set_bank_signature","title":"twil_set_bank_signature","text":"<p>Description</p> <p>Set bank signature</p> <p>Modify</p> <ul> <li>Accumulator </li> <li>Y Register </li> <li> <p>RESFor twil_set_bank_signature operation Input</p> </li> <li> <p>libzp : Bank backup</p> </li> </ul> <p>Example</p> <pre><code> jsr twil_set_bank_signature\nrts\n</code></pre>"},{"location":"2024.1/c/","title":"C","text":""},{"location":"2024.1/c/#c","title":"C","text":"<p>const char rom_signature[18] = \"Empty ram v2024.2\"; const char str_slash[2] = \"/\";</p>"}]}